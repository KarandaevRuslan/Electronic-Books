//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElectronicBooks.BookReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileTransferRequest", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceBook")]
    [System.SerializableAttribute()]
    public partial class FileTransferRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookReference.IServiceBook")]
    public interface IServiceBook {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/SignIn", ReplyAction="http://tempuri.org/IServiceBook/SignInResponse")]
        int SignIn(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/SignIn", ReplyAction="http://tempuri.org/IServiceBook/SignInResponse")]
        System.Threading.Tasks.Task<int> SignInAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/SearchUsers", ReplyAction="http://tempuri.org/IServiceBook/SearchUsersResponse")]
        int[] SearchUsers(int idIgnore, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/SearchUsers", ReplyAction="http://tempuri.org/IServiceBook/SearchUsersResponse")]
        System.Threading.Tasks.Task<int[]> SearchUsersAsync(int idIgnore, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/SearchBooks", ReplyAction="http://tempuri.org/IServiceBook/SearchBooksResponse")]
        int[] SearchBooks(int idIgnore, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/SearchBooks", ReplyAction="http://tempuri.org/IServiceBook/SearchBooksResponse")]
        System.Threading.Tasks.Task<int[]> SearchBooksAsync(int idIgnore, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/EditUserData", ReplyAction="http://tempuri.org/IServiceBook/EditUserDataResponse")]
        int EditUserData(int userId, string login, string password, string userInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/EditUserData", ReplyAction="http://tempuri.org/IServiceBook/EditUserDataResponse")]
        System.Threading.Tasks.Task<int> EditUserDataAsync(int userId, string login, string password, string userInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/DeleteAccount", ReplyAction="http://tempuri.org/IServiceBook/DeleteAccountResponse")]
        void DeleteAccount(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/DeleteAccount", ReplyAction="http://tempuri.org/IServiceBook/DeleteAccountResponse")]
        System.Threading.Tasks.Task DeleteAccountAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/DeleteBook", ReplyAction="http://tempuri.org/IServiceBook/DeleteBookResponse")]
        void DeleteBook(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/DeleteBook", ReplyAction="http://tempuri.org/IServiceBook/DeleteBookResponse")]
        System.Threading.Tasks.Task DeleteBookAsync(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/GetName", ReplyAction="http://tempuri.org/IServiceBook/GetNameResponse")]
        string GetName(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/GetName", ReplyAction="http://tempuri.org/IServiceBook/GetNameResponse")]
        System.Threading.Tasks.Task<string> GetNameAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/GetBook", ReplyAction="http://tempuri.org/IServiceBook/GetBookResponse")]
        string[] GetBook(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/GetBook", ReplyAction="http://tempuri.org/IServiceBook/GetBookResponse")]
        System.Threading.Tasks.Task<string[]> GetBookAsync(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/GetBooksId", ReplyAction="http://tempuri.org/IServiceBook/GetBooksIdResponse")]
        int[] GetBooksId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/GetBooksId", ReplyAction="http://tempuri.org/IServiceBook/GetBooksIdResponse")]
        System.Threading.Tasks.Task<int[]> GetBooksIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/GetDescription", ReplyAction="http://tempuri.org/IServiceBook/GetDescriptionResponse")]
        string GetDescription(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/GetDescription", ReplyAction="http://tempuri.org/IServiceBook/GetDescriptionResponse")]
        System.Threading.Tasks.Task<string> GetDescriptionAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/GetPassword", ReplyAction="http://tempuri.org/IServiceBook/GetPasswordResponse")]
        string GetPassword(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/GetPassword", ReplyAction="http://tempuri.org/IServiceBook/GetPasswordResponse")]
        System.Threading.Tasks.Task<string> GetPasswordAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/RegisterUser", ReplyAction="http://tempuri.org/IServiceBook/RegisterUserResponse")]
        int RegisterUser(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/RegisterUser", ReplyAction="http://tempuri.org/IServiceBook/RegisterUserResponse")]
        System.Threading.Tasks.Task<int> RegisterUserAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/Put", ReplyAction="http://tempuri.org/IServiceBook/PutResponse")]
        int Put(ElectronicBooks.BookReference.FileTransferRequest[] filesToPush, string name, string description, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/Put", ReplyAction="http://tempuri.org/IServiceBook/PutResponse")]
        System.Threading.Tasks.Task<int> PutAsync(ElectronicBooks.BookReference.FileTransferRequest[] filesToPush, string name, string description, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/Put1", ReplyAction="http://tempuri.org/IServiceBook/Put1Response")]
        void Put1(ElectronicBooks.BookReference.FileTransferRequest fileToPush, int bookId, int userId, string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/Put1", ReplyAction="http://tempuri.org/IServiceBook/Put1Response")]
        System.Threading.Tasks.Task Put1Async(ElectronicBooks.BookReference.FileTransferRequest fileToPush, int bookId, int userId, string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/EditBookName", ReplyAction="http://tempuri.org/IServiceBook/EditBookNameResponse")]
        int EditBookName(int bookId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/EditBookName", ReplyAction="http://tempuri.org/IServiceBook/EditBookNameResponse")]
        System.Threading.Tasks.Task<int> EditBookNameAsync(int bookId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/EditBookDescription", ReplyAction="http://tempuri.org/IServiceBook/EditBookDescriptionResponse")]
        void EditBookDescription(int bookId, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/EditBookDescription", ReplyAction="http://tempuri.org/IServiceBook/EditBookDescriptionResponse")]
        System.Threading.Tasks.Task EditBookDescriptionAsync(int bookId, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/EditBookCanEdit", ReplyAction="http://tempuri.org/IServiceBook/EditBookCanEditResponse")]
        void EditBookCanEdit(int bookId, int canEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/EditBookCanEdit", ReplyAction="http://tempuri.org/IServiceBook/EditBookCanEditResponse")]
        System.Threading.Tasks.Task EditBookCanEditAsync(int bookId, int canEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/EditBookAccess", ReplyAction="http://tempuri.org/IServiceBook/EditBookAccessResponse")]
        void EditBookAccess(int bookId, int access);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/EditBookAccess", ReplyAction="http://tempuri.org/IServiceBook/EditBookAccessResponse")]
        System.Threading.Tasks.Task EditBookAccessAsync(int bookId, int access);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/Get", ReplyAction="http://tempuri.org/IServiceBook/GetResponse")]
        ElectronicBooks.BookReference.FileTransferRequest[] Get(int bookId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/Get", ReplyAction="http://tempuri.org/IServiceBook/GetResponse")]
        System.Threading.Tasks.Task<ElectronicBooks.BookReference.FileTransferRequest[]> GetAsync(int bookId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/GetUserId", ReplyAction="http://tempuri.org/IServiceBook/GetUserIdResponse")]
        int GetUserId(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBook/GetUserId", ReplyAction="http://tempuri.org/IServiceBook/GetUserIdResponse")]
        System.Threading.Tasks.Task<int> GetUserIdAsync(int bookId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceBookChannel : ElectronicBooks.BookReference.IServiceBook, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceBookClient : System.ServiceModel.ClientBase<ElectronicBooks.BookReference.IServiceBook>, ElectronicBooks.BookReference.IServiceBook {
        
        public ServiceBookClient() {
        }
        
        public ServiceBookClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceBookClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBookClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBookClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int SignIn(string login, string password) {
            return base.Channel.SignIn(login, password);
        }
        
        public System.Threading.Tasks.Task<int> SignInAsync(string login, string password) {
            return base.Channel.SignInAsync(login, password);
        }
        
        public int[] SearchUsers(int idIgnore, string searchText) {
            return base.Channel.SearchUsers(idIgnore, searchText);
        }
        
        public System.Threading.Tasks.Task<int[]> SearchUsersAsync(int idIgnore, string searchText) {
            return base.Channel.SearchUsersAsync(idIgnore, searchText);
        }
        
        public int[] SearchBooks(int idIgnore, string searchText) {
            return base.Channel.SearchBooks(idIgnore, searchText);
        }
        
        public System.Threading.Tasks.Task<int[]> SearchBooksAsync(int idIgnore, string searchText) {
            return base.Channel.SearchBooksAsync(idIgnore, searchText);
        }
        
        public int EditUserData(int userId, string login, string password, string userInformation) {
            return base.Channel.EditUserData(userId, login, password, userInformation);
        }
        
        public System.Threading.Tasks.Task<int> EditUserDataAsync(int userId, string login, string password, string userInformation) {
            return base.Channel.EditUserDataAsync(userId, login, password, userInformation);
        }
        
        public void DeleteAccount(int userId) {
            base.Channel.DeleteAccount(userId);
        }
        
        public System.Threading.Tasks.Task DeleteAccountAsync(int userId) {
            return base.Channel.DeleteAccountAsync(userId);
        }
        
        public void DeleteBook(int bookId) {
            base.Channel.DeleteBook(bookId);
        }
        
        public System.Threading.Tasks.Task DeleteBookAsync(int bookId) {
            return base.Channel.DeleteBookAsync(bookId);
        }
        
        public string GetName(int userId) {
            return base.Channel.GetName(userId);
        }
        
        public System.Threading.Tasks.Task<string> GetNameAsync(int userId) {
            return base.Channel.GetNameAsync(userId);
        }
        
        public string[] GetBook(int bookId) {
            return base.Channel.GetBook(bookId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBookAsync(int bookId) {
            return base.Channel.GetBookAsync(bookId);
        }
        
        public int[] GetBooksId(int userId) {
            return base.Channel.GetBooksId(userId);
        }
        
        public System.Threading.Tasks.Task<int[]> GetBooksIdAsync(int userId) {
            return base.Channel.GetBooksIdAsync(userId);
        }
        
        public string GetDescription(int userId) {
            return base.Channel.GetDescription(userId);
        }
        
        public System.Threading.Tasks.Task<string> GetDescriptionAsync(int userId) {
            return base.Channel.GetDescriptionAsync(userId);
        }
        
        public string GetPassword(int userId) {
            return base.Channel.GetPassword(userId);
        }
        
        public System.Threading.Tasks.Task<string> GetPasswordAsync(int userId) {
            return base.Channel.GetPasswordAsync(userId);
        }
        
        public int RegisterUser(string login, string password) {
            return base.Channel.RegisterUser(login, password);
        }
        
        public System.Threading.Tasks.Task<int> RegisterUserAsync(string login, string password) {
            return base.Channel.RegisterUserAsync(login, password);
        }
        
        public int Put(ElectronicBooks.BookReference.FileTransferRequest[] filesToPush, string name, string description, int userId) {
            return base.Channel.Put(filesToPush, name, description, userId);
        }
        
        public System.Threading.Tasks.Task<int> PutAsync(ElectronicBooks.BookReference.FileTransferRequest[] filesToPush, string name, string description, int userId) {
            return base.Channel.PutAsync(filesToPush, name, description, userId);
        }
        
        public void Put1(ElectronicBooks.BookReference.FileTransferRequest fileToPush, int bookId, int userId, string path) {
            base.Channel.Put1(fileToPush, bookId, userId, path);
        }
        
        public System.Threading.Tasks.Task Put1Async(ElectronicBooks.BookReference.FileTransferRequest fileToPush, int bookId, int userId, string path) {
            return base.Channel.Put1Async(fileToPush, bookId, userId, path);
        }
        
        public int EditBookName(int bookId, string name) {
            return base.Channel.EditBookName(bookId, name);
        }
        
        public System.Threading.Tasks.Task<int> EditBookNameAsync(int bookId, string name) {
            return base.Channel.EditBookNameAsync(bookId, name);
        }
        
        public void EditBookDescription(int bookId, string description) {
            base.Channel.EditBookDescription(bookId, description);
        }
        
        public System.Threading.Tasks.Task EditBookDescriptionAsync(int bookId, string description) {
            return base.Channel.EditBookDescriptionAsync(bookId, description);
        }
        
        public void EditBookCanEdit(int bookId, int canEdit) {
            base.Channel.EditBookCanEdit(bookId, canEdit);
        }
        
        public System.Threading.Tasks.Task EditBookCanEditAsync(int bookId, int canEdit) {
            return base.Channel.EditBookCanEditAsync(bookId, canEdit);
        }
        
        public void EditBookAccess(int bookId, int access) {
            base.Channel.EditBookAccess(bookId, access);
        }
        
        public System.Threading.Tasks.Task EditBookAccessAsync(int bookId, int access) {
            return base.Channel.EditBookAccessAsync(bookId, access);
        }
        
        public ElectronicBooks.BookReference.FileTransferRequest[] Get(int bookId, int userId) {
            return base.Channel.Get(bookId, userId);
        }
        
        public System.Threading.Tasks.Task<ElectronicBooks.BookReference.FileTransferRequest[]> GetAsync(int bookId, int userId) {
            return base.Channel.GetAsync(bookId, userId);
        }
        
        public int GetUserId(int bookId) {
            return base.Channel.GetUserId(bookId);
        }
        
        public System.Threading.Tasks.Task<int> GetUserIdAsync(int bookId) {
            return base.Channel.GetUserIdAsync(bookId);
        }
    }
}
